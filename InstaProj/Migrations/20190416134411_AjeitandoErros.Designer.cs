// <auto-generated />
using InstaProj;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace InstaProj.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190416134411_AjeitandoErros")]
    partial class AjeitandoErros
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstaProj.Models.Entidades.Feed", b =>
                {
                    b.Property<int>("FeedId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("FeedId");

                    b.ToTable("Feed");
                });

            modelBuilder.Entity("InstaProj.Models.Entidades.Postagem", b =>
                {
                    b.Property<int>("PostagemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FeedId")
                        .IsRequired();

                    b.HasKey("PostagemId");

                    b.HasIndex("FeedId");

                    b.ToTable("Postagem");
                });

            modelBuilder.Entity("InstaProj.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<DateTime>("Nascimento");

                    b.Property<string>("Nome");

                    b.Property<int?>("PostagemId");

                    b.Property<string>("Senha");

                    b.Property<string>("Sexo");

                    b.Property<byte[]>("foto");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PostagemId")
                        .IsUnique()
                        .HasFilter("[PostagemId] IS NOT NULL");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("InstaProj.Models.Entidades.Postagem", b =>
                {
                    b.HasOne("InstaProj.Models.Entidades.Feed", "Feed")
                        .WithMany("Postagens")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InstaProj.Models.Entidades.Usuario", b =>
                {
                    b.HasOne("InstaProj.Models.Entidades.Postagem", "Postagem")
                        .WithOne("Usuario")
                        .HasForeignKey("InstaProj.Models.Entidades.Usuario", "PostagemId");
                });
#pragma warning restore 612, 618
        }
    }
}
